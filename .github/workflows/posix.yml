name: POSIX Builds

on:
  push:
    branches: 
      - feature/posix_gha
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        preset: [POSIX_DEV, POSIX_DEV_MIN, POSIX_REL, POSIX_REL_MIN, POSIX_THREADING_REL]
        tls_lib: [mbedtls, wolfssl]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Submodule update
        shell: bash
        run: |
          set -e
          git submodule init
          git submodule update

      - name: Update Apt
        shell: bash
        run: sudo apt-get update

      - name: Apt Install Prereqs
        shell: bash
        run: |
          set -e
          sudo apt-get install expect
          # sudo apt-get install clang-3.8
          # sudo apt-get qemu-system
          # sudo apt-get libc6:i386
          # sudo apt-get libc6-dev-i386
          # sudo apt-get gcc-multilib
          # sudo apt-get linux-libc-dev:i386
          # sudo apt-get device-tree-compiler
          # sudo apt-get gperf
          # sudo apt-get dfu-util
          # sudo apt-get xz-utils
          # sudo apt-get python3-pip

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: 6.0
      
      - name: Clone wolfSSL
        if: startsWith(matrix.tls_lib, 'wolfssl')
        shell: bash
        run: |
          set -e
          git clone -b v3.15.3-stable https://github.com/wolfSSL/wolfssl third_party/tls/wolfssl
          
      - name: Build SDK
        shell: bash
        env:
          CC: clang
        run: |
          expect res/travis/travis_build_${{matrix.tls_lib}}.expect \
            make PRESET=${{ matrix.preset }} IOTC_BSP_TLS=${{ matrix.tls_lib }} utests
      
      - name: Build Examples
        shell: bash
        env:
          CC: clang
        run: |
          make -C examples/iot_core_mqtt_client \
            IOTC_CLIENT_LIB_PATH=../../bin/linux IOTC_BSP_TLS=${{ matrix.tls_lib }}
