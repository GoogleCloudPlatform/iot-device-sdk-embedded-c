/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: testmessage.proto */

#ifndef PROTOBUF_C_testmessage_2eproto__INCLUDED
#define PROTOBUF_C_testmessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1001001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Parameter Parameter;
typedef struct _Function Function;


/* --- enums --- */

typedef enum _ParameterType {
  PARAMETER_TYPE__INTEGER_ARRAY = 0,
  PARAMETER_TYPE__STRING_ARRAY = 1,
  PARAMETER_TYPE__BYTE_ARRAY = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PARAMETER_TYPE)
} ParameterType;
typedef enum _FunctionTypes {
  FUNCTION_TYPES__REQUEST_CREDENTIALS = 0,
  FUNCTION_TYPES__SEND_CREDENTIALS = 1,
  FUNCTION_TYPES__enum1 = 2,
  FUNCTION_TYPES__enum2 = 3,
  FUNCTION_TYPES__enum3 = 4,
  FUNCTION_TYPES__enum4 = 5,
  FUNCTION_TYPES__enum5 = 6,
  FUNCTION_TYPES__enum6 = 7,
  FUNCTION_TYPES__enum7 = 8,
  FUNCTION_TYPES__enum8 = 9,
  FUNCTION_TYPES__enum9 = 10,
  FUNCTION_TYPES__enum10 = 11,
  FUNCTION_TYPES__enum11 = 12,
  FUNCTION_TYPES__enum12 = 13,
  FUNCTION_TYPES__enum13 = 14,
  FUNCTION_TYPES__enum14 = 15,
  FUNCTION_TYPES__enum15 = 16,
  FUNCTION_TYPES__enum16 = 17,
  FUNCTION_TYPES__enum17 = 18,
  FUNCTION_TYPES__enum18 = 19,
  FUNCTION_TYPES__enum19 = 20,
  FUNCTION_TYPES__enum20 = 21
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FUNCTION_TYPES)
} FunctionTypes;

/* --- messages --- */

struct  _Parameter
{
  ProtobufCMessage base;
  ParameterType type_of_parameter;
  size_t n_integer_array_param;
  int32_t *integer_array_param;
  size_t n_string_array_param;
  char **string_array_param;
  size_t n_bytes_array_param;
  ProtobufCBinaryData *bytes_array_param;
};
#define PARAMETER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&parameter__descriptor) \
    , 0, 0,NULL, 0,NULL, 0,NULL }


struct  _Function
{
  ProtobufCMessage base;
  FunctionTypes function;
  size_t n_parameters;
  Parameter **parameters;
};
#define FUNCTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&function__descriptor) \
    , 0, 0,NULL }


/* Parameter methods */
void   parameter__init
                     (Parameter         *message);
size_t parameter__get_packed_size
                     (const Parameter   *message);
size_t parameter__pack
                     (const Parameter   *message,
                      uint8_t             *out);
size_t parameter__pack_to_buffer
                     (const Parameter   *message,
                      ProtobufCBuffer     *buffer);
Parameter *
       parameter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   parameter__free_unpacked
                     (Parameter *message,
                      ProtobufCAllocator *allocator);
/* Function methods */
void   function__init
                     (Function         *message);
size_t function__get_packed_size
                     (const Function   *message);
size_t function__pack
                     (const Function   *message,
                      uint8_t             *out);
size_t function__pack_to_buffer
                     (const Function   *message,
                      ProtobufCBuffer     *buffer);
Function *
       function__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   function__free_unpacked
                     (Function *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Parameter_Closure)
                 (const Parameter *message,
                  void *closure_data);
typedef void (*Function_Closure)
                 (const Function *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    parameter_type__descriptor;
extern const ProtobufCEnumDescriptor    function_types__descriptor;
extern const ProtobufCMessageDescriptor parameter__descriptor;
extern const ProtobufCMessageDescriptor function__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_testmessage_2eproto__INCLUDED */
